{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u042B \\u0423\\u041D\\u0418\\u0412\\u0415\\u0420\\\\finalProject\\\\TrelloClone-master\\\\client\\\\src\\\\components\\\\board\\\\Members.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addMember } from '../../actions/board';\nimport getInitials from '../../utils/getInitials';\nimport { TextField, Button } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Members = () => {\n  _s();\n\n  const [inviting, setInviting] = useState(false);\n  const [user, setUser] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [users, setUsers] = useState([]);\n  const boardMembers = useSelector(state => state.board.board.members);\n  const searchOptions = users.filter(user => boardMembers.find(boardMember => boardMember.user === user._id) ? false : true);\n  const dispatch = useDispatch();\n\n  const handleInputValue = async newInputValue => {\n    setInputValue(newInputValue);\n\n    if (newInputValue && newInputValue !== '') {\n      const search = (await axios.get(`/api/users/${newInputValue}`)).data.slice(0, 5);\n      setUsers(search && search.length > 0 ? search : []);\n    }\n  };\n\n  const onSubmit = async () => {\n    dispatch(addMember(user._id));\n    setUser(null);\n    setInputValue('');\n    setInviting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-members-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-members\",\n      children: boardMembers.map(member => {\n        return /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: member.name,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"avatar\",\n            children: getInitials(member.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, member.user, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Members, \"+4bWLZXvkTcquwbVIUK0bui9f+g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Members;\nexport default Members;\n\nvar _c;\n\n$RefreshReg$(_c, \"Members\");","map":{"version":3,"sources":["D:/ПРОЕКТЫ УНИВЕР/finalProject/TrelloClone-master/client/src/components/board/Members.js"],"names":["React","useState","axios","useSelector","useDispatch","addMember","getInitials","TextField","Button","Avatar","Tooltip","Members","inviting","setInviting","user","setUser","inputValue","setInputValue","users","setUsers","boardMembers","state","board","members","searchOptions","filter","find","boardMember","_id","dispatch","handleInputValue","newInputValue","search","get","data","slice","length","onSubmit","map","member","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMmB,YAAY,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBC,OAA9B,CAAhC;AACA,QAAMC,aAAa,GAAGN,KAAK,CAACO,MAAN,CAAcX,IAAD,IACjCM,YAAY,CAACM,IAAb,CAAmBC,WAAD,IAAiBA,WAAW,CAACb,IAAZ,KAAqBA,IAAI,CAACc,GAA7D,IAAoE,KAApE,GAA4E,IADxD,CAAtB;AAGA,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;;AAEA,QAAM0B,gBAAgB,GAAG,MAAOC,aAAP,IAAyB;AAChDd,IAAAA,aAAa,CAACc,aAAD,CAAb;;AACA,QAAIA,aAAa,IAAIA,aAAa,KAAK,EAAvC,EAA2C;AACzC,YAAMC,MAAM,GAAG,CAAC,MAAM9B,KAAK,CAAC+B,GAAN,CAAW,cAAaF,aAAc,EAAtC,CAAP,EAAiDG,IAAjD,CAAsDC,KAAtD,CAA4D,CAA5D,EAA+D,CAA/D,CAAf;AACAhB,MAAAA,QAAQ,CAACa,MAAM,IAAIA,MAAM,CAACI,MAAP,GAAgB,CAA1B,GAA8BJ,MAA9B,GAAuC,EAAxC,CAAR;AACD;AACF,GAND;;AAQA,QAAMK,QAAQ,GAAG,YAAY;AAC3BR,IAAAA,QAAQ,CAACxB,SAAS,CAACS,IAAI,CAACc,GAAN,CAAV,CAAR;AACAb,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGO,YAAY,CAACkB,GAAb,CAAkBC,MAAD,IAAY;AAC5B,4BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEA,MAAM,CAACC,IAAvB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAAA,sBAA4BlC,WAAW,CAACiC,MAAM,CAACC,IAAR;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF,WAAkCD,MAAM,CAACzB,IAAzC;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;GAAMH,O;UAKiBR,W,EAIJC,W;;;KATbO,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addMember } from '../../actions/board';\nimport getInitials from '../../utils/getInitials';\nimport { TextField, Button } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst Members = () => {\n  const [inviting, setInviting] = useState(false);\n  const [user, setUser] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [users, setUsers] = useState([]);\n  const boardMembers = useSelector((state) => state.board.board.members);\n  const searchOptions = users.filter((user) =>\n    boardMembers.find((boardMember) => boardMember.user === user._id) ? false : true\n  );\n  const dispatch = useDispatch();\n\n  const handleInputValue = async (newInputValue) => {\n    setInputValue(newInputValue);\n    if (newInputValue && newInputValue !== '') {\n      const search = (await axios.get(`/api/users/${newInputValue}`)).data.slice(0, 5);\n      setUsers(search && search.length > 0 ? search : []);\n    }\n  };\n\n  const onSubmit = async () => {\n    dispatch(addMember(user._id));\n    setUser(null);\n    setInputValue('');\n    setInviting(false);\n  };\n\n  return (\n    <div className='board-members-wrapper'>\n      <div className='board-members'>\n        {boardMembers.map((member) => {\n          return (\n            <Tooltip title={member.name} key={member.user}>\n              <Avatar className='avatar'>{getInitials(member.name)}</Avatar>\n            </Tooltip>\n          );\n        })}\n    </div>\n    </div>\n  );\n};\n\nexport default Members;\n"]},"metadata":{},"sourceType":"module"}